/*
! tailwindcss v3.3.5 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: Noto Sans, sans-serif;
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: JetBrains Mono, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border-width: 0 !important;
}

.static {
  position: static !important;
}

.fixed {
  position: fixed !important;
}

.absolute {
  position: absolute !important;
}

.bottom-10 {
  bottom: 2.5rem !important;
}

.m-0 {
  margin: 0px !important;
}

.mb-5 {
  margin-bottom: 1.25rem !important;
}

.ms-2 {
  margin-inline-start: 0.5rem !important;
}

.block {
  display: block !important;
}

.flex {
  display: flex !important;
}

.table {
  display: table !important;
}

.hidden {
  display: none !important;
}

.h-12 {
  height: 3rem !important;
}

.w-12 {
  width: 3rem !important;
}

.shrink {
  flex-shrink: 1 !important;
}

.grow {
  flex-grow: 1 !important;
}

.rotate-180 {
  --tw-rotate: 180deg !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}

.rotate-90 {
  --tw-rotate: 90deg !important;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}

.cursor-pointer {
  cursor: pointer !important;
}

.items-center {
  align-items: center !important;
}

.justify-center {
  justify-content: center !important;
}

.space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0 !important;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse)) !important;
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse))) !important;
}

.justify-self-center {
  justify-self: center !important;
}

.rounded-full {
  border-radius: 9999px !important;
}

.rounded-none {
  border-radius: 0px !important;
}

.border {
  border-width: 1px !important;
}

.bg-aqua {
  --tw-bg-opacity: 1 !important;
  background-color: rgb(104 157 106 / var(--tw-bg-opacity)) !important;
}

.bg-blue {
  --tw-bg-opacity: 1 !important;
  background-color: rgb(69 133 136 / var(--tw-bg-opacity)) !important;
}

.p-2 {
  padding: 0.5rem !important;
}

.font-mono {
  font-family: JetBrains Mono, monospace !important;
}

.text-2xl {
  font-size: 1.5rem !important;
  line-height: 2rem !important;
}

.font-bold {
  font-weight: 700 !important;
}

.text-fg {
  --tw-text-opacity: 1 !important;
  color: rgb(60 56 54 / var(--tw-text-opacity)) !important;
}

.text-fg0 {
  --tw-text-opacity: 1 !important;
  color: rgb(40 40 40 / var(--tw-text-opacity)) !important;
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1) !important;
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
}

.shadow-none {
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
}

.outline-2 {
  outline-width: 2px !important;
}

.outline-4 {
  outline-width: 4px !important;
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow) !important;
}

.opaque {
  opacity: 1 !important;
}

body {
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: rgb(249 245 215 / 0.7);
  padding-left: 2rem;
  padding-right: 2rem;
  font-family: Noto Sans, sans-serif;
  --tw-text-opacity: 1;
  color: rgb(60 56 54 / var(--tw-text-opacity));
}

svg {
  fill: #3c3836;
  stroke: #3c3836;
}

.hero {
  margin-top: 2.5rem;
}

.subtitle {
  font-family: JetBrains Mono, monospace;
  font-size: 1.5rem;
  line-height: 2rem;
  font-style: italic;
  line-height: 1.625;
  --tw-text-opacity: 1;
  color: rgb(102 92 84 / var(--tw-text-opacity));
}

code.hljs {
  font-family: JetBrains Mono, monospace !important;
}

hr {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
  margin-top: 0.75rem;
  height: 0.25rem;
  border-radius: 0.25rem;
  border-style: none;
  background-color: rgb(124 111 100 / 0.5);
}

.status {
  margin-bottom: 2rem;
  margin-top: 0.75rem;
  justify-self: center;
  text-align: center;
}

.content {
  display: flex;
  width: 100%;
  flex-direction: row;
  justify-content: center;
}

.intro > div > p {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.intro > div > p :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.intro > div > p :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.intro > div > p :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.intro > div > p :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.intro > div > p :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.intro > div > p :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.intro > div > p :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.intro > div > p :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.intro > div > p :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.intro > div > p :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.intro > div > p :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.intro > div > p :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.intro > div > p :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.intro > div > p :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.intro > div > p :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.intro > div > p :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.intro > div > p :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
}

.intro > div > p :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.intro > div > p :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.intro > div > p :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.intro > div > p :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}

.intro > div > p :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.intro > div > p :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.intro > div > p :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: open-quote;
}

.intro > div > p :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: close-quote;
}

.intro > div > p :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.intro > div > p :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.intro > div > p :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.intro > div > p :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.intro > div > p :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.intro > div > p :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.intro > div > p :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.intro > div > p :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.intro > div > p :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.intro > div > p :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}

.intro > div > p :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-right: 0.375em;
  padding-bottom: 0.1875em;
  padding-left: 0.375em;
}

.intro > div > p :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.intro > div > p :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: "`";
}

.intro > div > p :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: "`";
}

.intro > div > p :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.intro > div > p :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.intro > div > p :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.intro > div > p :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.intro > div > p :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.intro > div > p :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.intro > div > p :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.intro > div > p :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.intro > div > p :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.intro > div > p :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: none;
}

.intro > div > p :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: none;
}

.intro > div > p :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.intro > div > p :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.intro > div > p :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.intro > div > p :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.intro > div > p :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.intro > div > p :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: baseline;
}

.intro > div > p :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.intro > div > p :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: top;
}

.intro > div > p :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.intro > div > p :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.intro > div > p {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.intro > div > p :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.intro > div > p :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.intro > div > p :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.intro > div > p :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.intro > div > p :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.intro > div > p :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.intro > div > p :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.intro > div > p :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.intro > div > p :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.intro > div > p :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.intro > div > p :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.intro > div > p :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.intro > div > p :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  padding-left: 1.625em;
}

.intro > div > p :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.intro > div > p :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.intro > div > p :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.intro > div > p :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.intro > div > p :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0;
}

.intro > div > p :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-right: 0;
}

.intro > div > p :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.intro > div > p :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0;
}

.intro > div > p :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-right: 0;
}

.intro > div > p :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.intro > div > p :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.intro > div > p :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 0;
}

.intro > div > p {
  font-size: 1.125rem;
  line-height: 1.7777778;
}

.intro > div > p :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
}

.intro > div > p :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 1.2222222em;
  line-height: 1.4545455;
  margin-top: 1.0909091em;
  margin-bottom: 1.0909091em;
}

.intro > div > p :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  padding-left: 1em;
}

.intro > div > p :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 2.6666667em;
  margin-top: 0;
  margin-bottom: 0.8333333em;
  line-height: 1;
}

.intro > div > p :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 1.6666667em;
  margin-top: 1.8666667em;
  margin-bottom: 1.0666667em;
  line-height: 1.3333333;
}

.intro > div > p :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 1.3333333em;
  margin-top: 1.6666667em;
  margin-bottom: 0.6666667em;
  line-height: 1.5;
}

.intro > div > p :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}

.intro > div > p :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.intro > div > p :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.intro > div > p :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.intro > div > p :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.intro > div > p :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8888889em;
  border-radius: 0.3125rem;
  padding-top: 0.2222222em;
  padding-right: 0.4444444em;
  padding-bottom: 0.2222222em;
  padding-left: 0.4444444em;
}

.intro > div > p :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8888889em;
}

.intro > div > p :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8666667em;
}

.intro > div > p :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.875em;
}

.intro > div > p :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.75;
  margin-top: 2em;
  margin-bottom: 2em;
  border-radius: 0.375rem;
  padding-top: 1em;
  padding-right: 1.5em;
  padding-bottom: 1em;
  padding-left: 1.5em;
}

.intro > div > p :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.5555556em;
}

.intro > div > p :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.5555556em;
}

.intro > div > p :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.6666667em;
  margin-bottom: 0.6666667em;
}

.intro > div > p :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0.4444444em;
}

.intro > div > p :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0.4444444em;
}

.intro > div > p :where(.prose-lg > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.intro > div > p :where(.prose-lg > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.intro > div > p :where(.prose-lg > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.intro > div > p :where(.prose-lg > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.intro > div > p :where(.prose-lg > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.intro > div > p :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.intro > div > p :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
}

.intro > div > p :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.intro > div > p :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.6666667em;
  padding-left: 1.5555556em;
}

.intro > div > p :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 3.1111111em;
  margin-bottom: 3.1111111em;
}

.intro > div > p :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.intro > div > p :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.intro > div > p :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.intro > div > p :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.intro > div > p :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.5;
}

.intro > div > p :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-right: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 0.75em;
}

.intro > div > p :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0;
}

.intro > div > p :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-right: 0;
}

.intro > div > p :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-top: 0.75em;
  padding-right: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 0.75em;
}

.intro > div > p :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0;
}

.intro > div > p :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-right: 0;
}

.intro > div > p :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.intro > div > p :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.intro > div > p :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.5;
  margin-top: 1em;
}

.intro > div > p :where(.prose-lg > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.intro > div > p :where(.prose-lg > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 0;
}

.intro > div > p {
  --tw-prose-pre-code: #ebdbb2;
  --tw-prose-pre-bg: #3c3836;
  --tw-prose-code: #665c54;
  max-width: none;
}

.intro > div > p::first-letter {
  float: left;
  margin-right: 0.75rem;
  border-bottom-width: 2px;
  font-size: 3.75rem;
  line-height: 1;
  font-weight: 700;
  --tw-text-opacity: 1;
  color: rgb(80 73 69 / var(--tw-text-opacity));
}

.intro > div > p > a {
  --tw-text-opacity: 1;
  color: rgb(69 133 136 / var(--tw-text-opacity));
  text-decoration-line: none;
}

.sidebar {
  position: sticky;
  top: 1.5rem;
  margin-inline-end: 4rem;
  display: none;
  height: -moz-fit-content;
  height: fit-content;
  width: 24rem !important;
  min-width: -moz-fit-content;
  min-width: fit-content;
  border-radius: 1rem;
  border-width: 4px;
  border-color: rgb(124 111 100 / 0);
  --tw-bg-opacity: 1;
  background-color: rgb(251 241 199 / var(--tw-bg-opacity));
  padding: 1.25rem;
  --tw-text-opacity: 1;
  color: rgb(80 73 69 / var(--tw-text-opacity));
  opacity: 0.1;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

@media (min-width: 1536px) {
  .sidebar {
    display: block;
  }
}

.unhide {
  background-color: rgb(251 241 199 / var(--tw-bg-opacity)) !important;
  width: 90% !important;
  position: fixed !important;
  display: block !important;
  opacity: 1 !important;
  top: 2rem !important;
  height: calc(100% - 10rem) !important;
  margin-right: 0px !important;
  right: unset !important;
  margin-left: 0px !important;
  border-width: 0px !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
}

.unhide:hover {
  --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25) !important;
  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
}

.unhide {
  max-width: 36rem;
  --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.lock-scroll {
  position: fixed;
  top: var(--st, 0);
  inline-size: 100%;
  overflow-y:scroll;
}

#table-of-contents.unhide {
  --tw-bg-opacity: 1;
  -webkit-mask-image: none;
  padding: 1.25rem;
  font-size: 18px;
}

.sidebar > div {
  cursor: pointer;
}

.sidebar:hover {
  --tw-border-opacity: 1;
  border-color: rgb(124 111 100 / var(--tw-border-opacity));
  opacity: 1;
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.sidebar > ul {
  margin-bottom: 0.75rem;
  padding-inline-start: 0px;
  font-size: 1.125rem;
  line-height: 1.75rem;
  font-weight: 700;
}

.sidebar > ul > li {
  margin-top: 0.5rem;
  width: -moz-fit-content;
  width: fit-content;
  border-radius: 0.5rem;
  padding: 0.25rem;
  font-family: JetBrains Mono, monospace;
}

.sidebar > ul > li > a {
  --tw-text-opacity: 1;
  color: rgb(60 56 54 / var(--tw-text-opacity));
}

.sidebar > ul > li > a:hover {
  border-color: rgb(60 56 54 / 0);
  background-color: rgb(60 56 54 / 0);
  --tw-text-opacity: 1;
  color: rgb(80 73 69 / var(--tw-text-opacity));
}

.sidebar > ul > li:hover {
  cursor: pointer;
  background-color: rgb(214 93 14 / 0.5);
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.org-content {
  margin-bottom: 4rem;
  display: flex;
  width: 100%;
  flex-direction: column;
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}

@media (min-width: 1024px) {
  .org-content {
    width: 800px;
  }
}

.title {
  margin-bottom: 0.75rem;
  font-family: JetBrains Mono, monospace;
  font-size: 3rem;
  font-weight: 700;
  line-height: 1.375;
  --tw-text-opacity: 1;
  color: rgb(80 73 69 / var(--tw-text-opacity));
}

#org-div-home-and-up {
  margin-bottom: 1.5rem;
}

#table-of-contents > h2 {
  margin: 0px;
  margin-bottom: 0.5rem;
  font-family: JetBrains Mono, monospace;
  font-size: 1.25rem;
  line-height: 1.75rem;
  font-weight: 700;
  --tw-text-opacity: 1;
  color: rgb(102 92 84 / var(--tw-text-opacity));
}

#table-of-contents {
  position: sticky;
  top: 0px;
  right: 1.25rem;
  margin-inline-start: 2.5rem;
  display: none;
  height: -moz-fit-content;
  height: fit-content;
  max-height: calc(100vh);
  width: -moz-fit-content;
  width: fit-content;
  overflow: auto;
  overflow-wrap: break-word;
  border-radius: 0.75rem;
  padding-top: 3rem;
  padding-bottom: 3rem;
  padding-inline-end: 1.25rem;
  opacity: 0.2;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

@media (min-width: 1280px) {
  #table-of-contents {
    display: block;
  }
}

@media (min-width: 1536px) {
  #table-of-contents {
    width: 400px;
  }
}

#table-of-contents:hover {
  opacity: 1;
}

#table-of-contents {
  -webkit-mask-image: linear-gradient(180deg,transparent 0,rgb(249 245 215) 3rem calc(100% - 3rem),transparent);
}

::-webkit-scrollbar {
  background-color: rgb(80 73 69);
  color: rgb(249 245 215);
  width: 6px;
}

::-webkit-scrollbar-thumb {
  background: rgb(124 111 100 / 0.3);
  border-radius: 10px;
}

::-webkit-scrollbar-track {
  background: rgb(249 245 215);
}

ul {
  padding-inline-start: 1rem;
}

ol {
  list-style-type: decimal;
  padding-inline-start: 1rem;
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.org-ol {
  font-weight: 700;
  --tw-text-opacity: 1;
  color: rgb(102 92 84 / var(--tw-text-opacity));
}

.org-ol > li {
  margin-bottom: 1.25rem;
  border-inline-start-width: 2px;
  border-color: rgb(124 111 100 / 0);
  padding-inline-start: 1rem;
}

a {
  --tw-text-opacity: 1;
  color: rgb(69 133 136 / var(--tw-text-opacity));
}

a:hover {
  border-bottom-width: 1px;
  background-color: rgb(69 133 136 / 0.1);
}

h2 {
  font-family: JetBrains Mono, monospace;
  font-size: 1.875rem;
  line-height: 2.25rem;
  font-weight: 700;
  --tw-text-opacity: 1;
  color: rgb(102 92 84 / var(--tw-text-opacity));
}

h2, h3, h4, h5, h6, h7 {
  margin-top: 2rem;
  margin-bottom: 0.5rem;
  font-family: JetBrains Mono, monospace;
  font-weight: 700;
  --tw-text-opacity: 1;
  color: rgb(80 73 69 / var(--tw-text-opacity));
}

.section-number-2, .section-number-3, .section-number-4, .section-number-5 {
  --tw-text-opacity: 1;
  color: rgb(124 111 100 / var(--tw-text-opacity));
}

h4 {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

h5 {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

h6 {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

h3 {
  font-size: 1.5rem;
  line-height: 2rem;
}

.status {
  --tw-text-opacity: 1;
  color: rgb(168 153 132 / var(--tw-text-opacity));
}

.validation {
  display: none;
}

.outline-text-2, .outline-text-3, .outline-text-4, .outline-text-5, .outline-text-6 {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.outline-text-2 :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.outline-text-2 :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.outline-text-2 :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.outline-text-2 :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.outline-text-2 :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.outline-text-2 :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.outline-text-2 :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.outline-text-2 :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.outline-text-2 :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.outline-text-2 :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.outline-text-2 :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.outline-text-2 :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.outline-text-2 :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.outline-text-2 :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.outline-text-2 :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.outline-text-2 :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.outline-text-2 :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
}

.outline-text-2 :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.outline-text-2 :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker, .outline-text-3 :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker, .outline-text-4 :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker, .outline-text-5 :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker, .outline-text-6 :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.outline-text-2 :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker, .outline-text-3 :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker, .outline-text-4 :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker, .outline-text-5 :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker, .outline-text-6 :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.outline-text-2 :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}

.outline-text-2 :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.outline-text-2 :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.outline-text-2 :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before, .outline-text-3 :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before, .outline-text-4 :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before, .outline-text-5 :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before, .outline-text-6 :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: open-quote;
}

.outline-text-2 :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after, .outline-text-3 :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after, .outline-text-4 :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after, .outline-text-5 :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after, .outline-text-6 :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: close-quote;
}

.outline-text-2 :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.outline-text-2 :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.outline-text-2 :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.outline-text-2 :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.outline-text-2 :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.outline-text-2 :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.outline-text-2 :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.outline-text-2 :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.outline-text-2 :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.outline-text-2 :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}

.outline-text-2 :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-right: 0.375em;
  padding-bottom: 0.1875em;
  padding-left: 0.375em;
}

.outline-text-2 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.outline-text-2 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before, .outline-text-3 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before, .outline-text-4 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before, .outline-text-5 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before, .outline-text-6 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: "`";
}

.outline-text-2 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after, .outline-text-3 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after, .outline-text-4 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after, .outline-text-5 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after, .outline-text-6 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: "`";
}

.outline-text-2 :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.outline-text-2 :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.outline-text-2 :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.outline-text-2 :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.outline-text-2 :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.outline-text-2 :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.outline-text-2 :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.outline-text-2 :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.outline-text-2 :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.outline-text-2 :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before, .outline-text-3 :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before, .outline-text-4 :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before, .outline-text-5 :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before, .outline-text-6 :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: none;
}

.outline-text-2 :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after, .outline-text-3 :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after, .outline-text-4 :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after, .outline-text-5 :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after, .outline-text-6 :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: none;
}

.outline-text-2 :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.outline-text-2 :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.outline-text-2 :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.outline-text-2 :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.outline-text-2 :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.outline-text-2 :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: baseline;
}

.outline-text-2 :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.outline-text-2 :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: top;
}

.outline-text-2 :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.outline-text-2 :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.outline-text-2, .outline-text-3, .outline-text-4, .outline-text-5, .outline-text-6 {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.outline-text-2 :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.outline-text-2 :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.outline-text-2 :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.outline-text-2 :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.outline-text-2 :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.outline-text-2 :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.outline-text-2 :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.outline-text-2 :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.outline-text-2 :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.outline-text-2 :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.outline-text-2 :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.outline-text-2 :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.outline-text-2 :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  padding-left: 1.625em;
}

.outline-text-2 :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.outline-text-2 :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.outline-text-2 :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.outline-text-2 :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.outline-text-2 :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0;
}

.outline-text-2 :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-right: 0;
}

.outline-text-2 :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.outline-text-2 :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0;
}

.outline-text-2 :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-right: 0;
}

.outline-text-2 :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.outline-text-2 :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.outline-text-2 :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 0;
}

.outline-text-2, .outline-text-3, .outline-text-4, .outline-text-5, .outline-text-6 {
  font-size: 1.125rem;
  line-height: 1.7777778;
}

.outline-text-2 :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
}

.outline-text-2 :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 1.2222222em;
  line-height: 1.4545455;
  margin-top: 1.0909091em;
  margin-bottom: 1.0909091em;
}

.outline-text-2 :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  padding-left: 1em;
}

.outline-text-2 :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 2.6666667em;
  margin-top: 0;
  margin-bottom: 0.8333333em;
  line-height: 1;
}

.outline-text-2 :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 1.6666667em;
  margin-top: 1.8666667em;
  margin-bottom: 1.0666667em;
  line-height: 1.3333333;
}

.outline-text-2 :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 1.3333333em;
  margin-top: 1.6666667em;
  margin-bottom: 0.6666667em;
  line-height: 1.5;
}

.outline-text-2 :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}

.outline-text-2 :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.outline-text-2 :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.outline-text-2 :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.outline-text-2 :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.outline-text-2 :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8888889em;
  border-radius: 0.3125rem;
  padding-top: 0.2222222em;
  padding-right: 0.4444444em;
  padding-bottom: 0.2222222em;
  padding-left: 0.4444444em;
}

.outline-text-2 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8888889em;
}

.outline-text-2 :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8666667em;
}

.outline-text-2 :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.875em;
}

.outline-text-2 :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.75;
  margin-top: 2em;
  margin-bottom: 2em;
  border-radius: 0.375rem;
  padding-top: 1em;
  padding-right: 1.5em;
  padding-bottom: 1em;
  padding-left: 1.5em;
}

.outline-text-2 :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.5555556em;
}

.outline-text-2 :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.5555556em;
}

.outline-text-2 :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.6666667em;
  margin-bottom: 0.6666667em;
}

.outline-text-2 :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0.4444444em;
}

.outline-text-2 :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0.4444444em;
}

.outline-text-2 :where(.prose-lg > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(.prose-lg > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(.prose-lg > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(.prose-lg > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(.prose-lg > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.outline-text-2 :where(.prose-lg > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(.prose-lg > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(.prose-lg > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(.prose-lg > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(.prose-lg > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.outline-text-2 :where(.prose-lg > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(.prose-lg > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(.prose-lg > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(.prose-lg > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(.prose-lg > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.outline-text-2 :where(.prose-lg > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(.prose-lg > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(.prose-lg > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(.prose-lg > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(.prose-lg > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.outline-text-2 :where(.prose-lg > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(.prose-lg > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(.prose-lg > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(.prose-lg > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(.prose-lg > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.outline-text-2 :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.outline-text-2 :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
}

.outline-text-2 :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.outline-text-2 :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.6666667em;
  padding-left: 1.5555556em;
}

.outline-text-2 :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 3.1111111em;
  margin-bottom: 3.1111111em;
}

.outline-text-2 :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.outline-text-2 :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.outline-text-2 :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.outline-text-2 :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.outline-text-2 :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.5;
}

.outline-text-2 :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-right: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 0.75em;
}

.outline-text-2 :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0;
}

.outline-text-2 :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-right: 0;
}

.outline-text-2 :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-top: 0.75em;
  padding-right: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 0.75em;
}

.outline-text-2 :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0;
}

.outline-text-2 :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-right: 0;
}

.outline-text-2 :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.outline-text-2 :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.outline-text-2 :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.5;
  margin-top: 1em;
}

.outline-text-2 :where(.prose-lg > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(.prose-lg > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(.prose-lg > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(.prose-lg > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(.prose-lg > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.outline-text-2 :where(.prose-lg > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-3 :where(.prose-lg > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-4 :where(.prose-lg > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-5 :where(.prose-lg > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)), .outline-text-6 :where(.prose-lg > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 0;
}

.outline-text-2, .outline-text-3, .outline-text-4, .outline-text-5, .outline-text-6 {
  --tw-prose-pre-code: #ebdbb2;
  --tw-prose-pre-bg: #3c3836;
  --tw-prose-code: #665c54;
  max-width: none;
}

.outline-text-2 :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-3 :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-4 :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-5 :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-6 :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  font-family: Noto Sans, sans-serif;
}

.outline-text-2 :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-3 :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-4 :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-5 :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-6 :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  --tw-text-opacity: 1;
  color: rgb(69 133 136 / var(--tw-text-opacity));
  text-decoration-line: none;
}

.outline-text-2 :is(:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-3 :is(:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-4 :is(:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-5 :is(:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-6 :is(:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  border-color: rgb(102 92 84 / 0.2);
  --tw-text-opacity: 1;
  color: rgb(80 73 69 / var(--tw-text-opacity));
}

.outline-text-2 :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-3 :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-4 :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-5 :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-6 :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  margin: 0px;
  margin-top: 1.25rem;
  margin-bottom: 1.25rem;
  background-color: rgb(60 56 54 / 0);
  padding: 0px;
}

.outline-text-2 :is(:where(table):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-3 :is(:where(table):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-4 :is(:where(table):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-5 :is(:where(table):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-6 :is(:where(table):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  border-radius: 0.75rem;
  --tw-bg-opacity: 1;
  background-color: rgb(251 241 199 / var(--tw-bg-opacity));
  padding: 1.25rem;
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-text-2 :is(:where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-3 :is(:where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-4 :is(:where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-5 :is(:where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-6 :is(:where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  border-color: rgb(124 111 100 / 0.4);
}

.outline-text-2 :is(:where(tr):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-3 :is(:where(tr):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-4 :is(:where(tr):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-5 :is(:where(tr):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-6 :is(:where(tr):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  border-color: rgb(124 111 100 / 0.2);
}

.outline-text-2 :is(:where(th):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-3 :is(:where(th):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-4 :is(:where(th):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-5 :is(:where(th):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-6 :is(:where(th):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  --tw-text-opacity: 1;
  color: rgb(80 73 69 / var(--tw-text-opacity));
}

.outline-text-2 :is(:where(td):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-3 :is(:where(td):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-4 :is(:where(td):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-5 :is(:where(td):not(:where([class~="not-prose"],[class~="not-prose"] *))), .outline-text-6 :is(:where(td):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.outline-text-2, .outline-text-3, .outline-text-4, .outline-text-5, .outline-text-6 {
  font-weight: 400;
}

.outline-text-2 > ol, .outline-text-3 > ol, .outline-text-4 > ol,
.outline-text-5 > ol, .outline-text-6 > ol {
  font-weight: 400;
  --tw-text-opacity: 1;
  color: rgb(60 56 54 / var(--tw-text-opacity));
}

pre code.hljs {
  margin: 0px !important;
  border-radius: 0.75rem !important;
  padding: 1.25rem !important;
}

b {
  font-weight: 700;
  --tw-text-opacity: 1;
  color: rgb(124 111 100 / var(--tw-text-opacity));
}

img {
  margin-bottom: 0.75rem;
  border-radius: 1rem;
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

@media (min-width: 1280px) {
  .xl\:hidden {
    display: none !important;
  }
}

@media (min-width: 1536px) {
  .\32xl\:hidden {
    display: none !important;
  }
}
